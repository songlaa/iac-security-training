<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Basics on iac security Training</title><link>/docs/03/</link><description>Recent content in Basics on iac security Training</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="/docs/03/index.xml" rel="self" type="application/rss+xml"/><item><title>Resources</title><link>/docs/03/1-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/03/1-resources/</guid><description>Preparation Create a new directory for this exercise:
mkdir -p $LAB_ROOT/basics/resources cd $LAB_ROOT/basics/resources Step 3.1.1: Create main.tf We will start with a simple example by creating a resource of type random_integer. This resources generates a random number in the configured range.
Create a new file named main.tf in your working directory and paste the following:
resource &amp;#34;random_integer&amp;#34; &amp;#34;number&amp;#34; { min = 1000 max = 9999 } Explanation The resource block defines one (or multiple) infrastructure objects which are managed by Terraform.</description></item><item><title>Variables</title><link>/docs/03/2-variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/03/2-variables/</guid><description>Preparation Create a new directory for this exercise:
mkdir -p $LAB_ROOT/basics/variables cd $LAB_ROOT/basics/variables Step 3.2.1: Create variables.tf and main.tf Create a new file named variables.tf in your working directory and add the following content:
variable &amp;#34;random_min_value&amp;#34; { type = number default = 1000 description = &amp;#34;min value of the random number&amp;#34; } Create a new file named main.tf in your working directory and add the following content:
resource &amp;#34;random_integer&amp;#34; &amp;#34;number&amp;#34; { min = var.</description></item><item><title>Outputs</title><link>/docs/03/3-outputs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/03/3-outputs/</guid><description>Preparation Finish the Variables exercise and navigate to the directory:
cd $LAB_ROOT/basics/variables Step 3.3.1: Create outputs.tf Create a new file named outputs.tf in your working directory and add the following content:
output &amp;#34;number&amp;#34; { value = random_integer.number.result description = &amp;#34;random value created by terraform&amp;#34; } Step 3.3.2: Apply the configuration Run the command
terraform apply and you should see output similar to this:
Plan: 0 to add, 0 to change, 0 to destroy.</description></item><item><title>Data Sources</title><link>/docs/03/4-data-sources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/03/4-data-sources/</guid><description>Preparation Create a new directory for this exercise:
mkdir -p $LAB_ROOT/basics/data_sources cd $LAB_ROOT/basics/data_sources Step 3.4.1: Create resources Create a new file named main.tf in your working directory and paste the following:
resource &amp;#34;random_integer&amp;#34; &amp;#34;number&amp;#34; { min = 1000 max = 9999 } resource &amp;#34;local_file&amp;#34; &amp;#34;random&amp;#34; { content = random_integer.number.result filename = &amp;#34;random.txt&amp;#34; } Step 3.4.2: Apply the configuration Run the commands
terraform init terraform apply You will see on the console the resource random_integer.</description></item><item><title>Types / Functions</title><link>/docs/03/5-types-and-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/03/5-types-and-functions/</guid><description>Preparation Create a new directory for this exercise:
mkdir -p $LAB_ROOT/basics/types cd $LAB_ROOT/basics/types Documentation for the built-in functions can be found at: https://www.terraform.io/docs/language/functions/index.html Step 3.5.1: String interpolation Create a new file named strings.tf and add the following content:
locals { counter = 5 } output &amp;#34;counter&amp;#34; { value = &amp;#34;Counter is ${local.counter}&amp;#34; } Run init and apply:
terraform init terraform apply Step 3.5.2: Working with lists Create a new file named lists.</description></item></channel></rss>